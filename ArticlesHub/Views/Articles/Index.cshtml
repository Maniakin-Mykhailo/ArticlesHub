@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<ArticlesHub.Models.Article>


@{
    ViewData["Title"] = "Index";
}



    @if (SignInManager.IsSignedIn(User))
    {
        <nav class="navbar navbar-expand-lg bg-dark " data-bs-theme="dark">
            <div class="container-fluid">
                <div class="collapse navbar-collapse" id="navbarColor01">
                    <ul class="navbar-nav me-auto">
                        <li class="nav-item">
                            <a class="text-white" asp-action="Create">&nbsp;Create New</a>
                        </li>
                        <li class="nav-item">
                            <a class="text-white" asp-controller="Home" asp-action="Index"><i class="bi bi-backspace-fill text-white"></i>&nbsp;Home</a>
                        </li>
                    </ul>

                </div>
            </div>
        </nav>
    }



<div class="gallery">
    @foreach (var item in Model)
    {
        <div class="gallery-item bg-primary text-white">

            <h1 class="text-white">@Html.DisplayNameFor(model => model.Title) : @Html.DisplayFor(modelItem => item.Title)</h1>
            <hr />

           @* <h2>
                @(item.Text.Length > 50 ? Html.Raw(item.Text.Substring(0, 50) + "...")
                    : Html.Raw(item.Text))
            </h2>*@

            <h2 class ="text-white">@Html.DisplayNameFor(modelItem => item.Author) : @Html.DisplayFor(modelItem => item.Author)</h2>
            <a class="details" asp-action="Details" asp-route-id="@item.Id">Details</a>
        </div>
    }
</div>
